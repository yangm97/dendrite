version: "3.4"

x-common:
  &common
  build: .
  restart: always
  secrets:
    - source: server.crt
      target: /server.crt
    - source: server.key
      target: /server.key
  volumes:
    - ./configs/multiprocess.yaml:/dendrite.yaml # Because docker-compose ignores configs but not secrets *shrug*

services:
  room-server: *common

  client-api: *common

  federation-api: *common

  sync-api: *common

  media-api: *common

  public-rooms-api: *common

  federation-sender: *common

  client-api-proxy:
    << : *common
    entrypoint: /usr/local/bin/client-api-proxy
    command: [
      "--bind-address", ":8008",
      "--tls-cert", "server.crt",
      "--tls-key", "server.key",
      "--client-api-server-url", "http://client-api:7771",
      "--sync-api-server-url", "http://sync-api:7773",
      "--media-api-server-url", "http://media-api:7774",
      "--public-rooms-api-server-url", "http://public-roomsapi:7775"
    ]
    ports:
      - "8008:8008"

  federation-api-proxy:
    << : *common
    entrypoint: /usr/local/bin/federation-api-proxy
    command: [
      "--bind-address", ":8448",
      "--federation-api-url", "http://federation-api:7772",
      "--media-api-server-url", "http://media-api:7774"
    ]
    ports:
      - "8448:8448"

  zookeeper:
    image: zookeeper

  kafka:
    image: wurstmeister/kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"

  postgres:
    restart: always
    image: postgres:9.5
    volumes:
      - ./docker/postgres/create_db.sh:/docker-entrypoint-initdb.d/20-create_db.sh
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: itsasecret
      POSTGRES_USER: dendrite
    ports:
      - "5432:5432"

secrets:
  server.crt:
    file: ./secrets/server.crt
  server.key:
    file: ./secrets/server.key

volumes:
  pg-data:
